{"ast":null,"code":"var _jsxFileName = \"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, InputNumber, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Setting(props) {\n  _s();\n\n  const {\n    setting,\n    setSubmit,\n    handleClickSetting\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const [formCaches, setFormCaches] = useState(setting);\n\n  const settingFnc = () => {\n    console.log(\"1111\");\n    setVisible(visible => !visible);\n    handleClickSetting();\n  };\n\n  useEffect(() => {\n    setFormCaches(setting);\n    console.log(formCaches);\n  }, [setting]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: settingFnc,\n      children: \"\\u8BBE\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\u8BBE\\u7F6E\",\n      visible: visible,\n      onOk: () => {\n        setVisible(false);\n      },\n      onCancel: () => {\n        setVisible(false);\n      },\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\",\n      children: [JSON.stringify(setting), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u7B2C\\u4E00\\u884C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), setting.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 1,\n          max: 10,\n          defaultValue: item,\n          onChange: num => {\n            console.log(num);\n            console.log(index);\n            const data = JSON.parse(JSON.stringify(formCaches));\n            console.log(data);\n            setFormCaches(data.splice(index, 1, num));\n            console.log(formCaches);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Setting, \"vt6NwCgt+RWgsybv4dzbgtJw1ZQ=\");\n\n_c = Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx"],"names":["Button","InputNumber","Modal","useEffect","useState","Setting","props","setting","setSubmit","handleClickSetting","visible","setVisible","formCaches","setFormCaches","settingFnc","console","log","JSON","stringify","map","item","index","num","data","parse","splice"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,SAAT,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAaA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAkC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA6CH,KAAnD;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACG,OAAD,CAA5C;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAL,IAAAA,UAAU,CAAED,OAAD,IAAa,CAACA,OAAf,CAAV;AACAD,IAAAA,kBAAkB;AACnB,GAJD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CAACN,OAAD,CAAb;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,GAHQ,EAGN,CAACL,OAAD,CAHM,CAAT;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEO,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,IAAI,EAAE,MAAM;AACVC,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALH;AAME,MAAA,QAAQ,EAAE,MAAM;AACdA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OARH;AASE,MAAA,MAAM,EAAC,cATT;AAUE,MAAA,UAAU,EAAC,cAVb;AAAA,iBAYGM,IAAI,CAACC,SAAL,CAAeX,OAAf,CAZH,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcGA,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,4BACE,QAAC,WAAD;AAEE,UAAA,GAAG,EAAE,CAFP;AAGE,UAAA,GAAG,EAAE,EAHP;AAIE,UAAA,YAAY,EAAED,IAJhB;AAKE,UAAA,QAAQ,EAAGE,GAAD,IAAS;AACjBP,YAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,kBAAME,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeN,UAAf,CAAX,CAAb;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AAEAV,YAAAA,aAAa,CAACU,IAAI,CAACE,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB,EAAsBC,GAAtB,CAAD,CAAb;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD;AAbH,WACOS,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAiBD,OAlBA,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAyCD;;GAxDuBhB,O;;KAAAA,O","sourcesContent":["import { Button, InputNumber, Modal } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface ISetting {\n  setting: Array<number>;\n  setSubmit: Function;\n  handleClickSetting: Function;\n}\n\ninterface IDialog {\n  openPopup(): void;\n  closePopup(): void;\n}\n\nexport default function Setting(props: ISetting) {\n  const { setting, setSubmit, handleClickSetting } = props;\n  const [visible, setVisible] = useState(false);\n  const [formCaches, setFormCaches] = useState(setting);\n\n  const settingFnc = () => {\n    console.log(\"1111\");\n    setVisible((visible) => !visible);\n    handleClickSetting();\n  };\n  useEffect(() => {\n    setFormCaches(setting);\n    console.log(formCaches);\n  }, [setting]);\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={settingFnc}>\n        设置\n      </Button>\n      <Modal\n        title=\"设置\"\n        visible={visible}\n        onOk={() => {\n          setVisible(false);\n        }}\n        onCancel={() => {\n          setVisible(false);\n        }}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        {JSON.stringify(setting)}\n        <p>第一行</p>\n        {setting.map((item, index) => {\n          return (\n            <InputNumber\n              key={index}\n              min={1}\n              max={10}\n              defaultValue={item}\n              onChange={(num) => {\n                console.log(num);\n                console.log(index);\n                const data = JSON.parse(JSON.stringify(formCaches));\n                console.log(data);\n\n                setFormCaches(data.splice(index, 1, num));\n                console.log(formCaches);\n              }}\n            />\n          );\n        })}\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}