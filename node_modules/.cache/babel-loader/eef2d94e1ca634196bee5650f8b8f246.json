{"ast":null,"code":"var _jsxFileName = \"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, InputNumber, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Setting(props) {\n  _s();\n\n  const {\n    setting,\n    setSettingDatas,\n    handleClickSetting,\n    gamesDatas\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const [formCaches, setFormCaches] = useState(setting);\n\n  const settingFnc = () => {\n    setVisible(visible => !visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: settingFnc,\n      children: \"\\u8BBE\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\u8BBE\\u7F6E\",\n      visible: visible,\n      onOk: () => {\n        setSettingDatas(formCaches);\n        setVisible(false);\n        handleClickSetting();\n      },\n      onCancel: () => {\n        setVisible(false);\n      },\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: DefaultSettingWrapperStyle,\n        children: formCaches.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: DefaultSettingRowStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u7B2C\", index + 1, \"\\u884C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 1,\n              max: 10,\n              defaultValue: item,\n              onChange: num => {\n                const data = JSON.parse(JSON.stringify(formCaches));\n                data.splice(index, 1, num);\n                setFormCaches(data);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const data = JSON.parse(JSON.stringify(formCaches));\n                data.splice(index, 0, 1);\n                console.log(data);\n                setFormCaches(data);\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Setting, \"B3OBxAHz3CBoi9BBNm42iNBc5z4=\");\n\n_c = Setting;\nconst DefaultSettingWrapperStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"50%\"\n};\nconst DefaultSettingRowStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-evenly\",\n  marginBottom: \"10px\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx"],"names":["Button","InputNumber","Modal","useState","Setting","props","setting","setSettingDatas","handleClickSetting","gamesDatas","visible","setVisible","formCaches","setFormCaches","settingFnc","DefaultSettingWrapperStyle","map","item","index","DefaultSettingRowStyle","num","data","JSON","parse","stringify","splice","console","log","Math","random","display","flexDirection","width","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import { Button, InputNumber, Modal } from \"antd\";\nimport { CSSProperties, useEffect, useRef, useState } from \"react\";\nimport { IBox } from \"../../type/types\";\n\ninterface ISetting {\n  setting: Array<number>;\n  setSettingDatas: Function;\n  handleClickSetting: Function;\n  gamesDatas: Array<Array<IBox>>;\n}\n\nexport default function Setting(props: ISetting) {\n  const { setting, setSettingDatas, handleClickSetting, gamesDatas } = props;\n  const [visible, setVisible] = useState(false);\n  const [formCaches, setFormCaches] = useState(setting);\n\n  const settingFnc = () => {\n    setVisible((visible) => !visible);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={settingFnc}>\n        设置\n      </Button>\n      <Modal\n        title=\"设置\"\n        visible={visible}\n        onOk={() => {\n          setSettingDatas(formCaches);\n          setVisible(false);\n          handleClickSetting();\n        }}\n        onCancel={() => {\n          setVisible(false);\n        }}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        <div style={DefaultSettingWrapperStyle}>\n          {formCaches.map((item, index) => {\n            return (\n              <div style={DefaultSettingRowStyle} key={Math.random()}>\n                <span>第{index + 1}行</span>\n                <InputNumber\n                  min={1}\n                  max={10}\n                  defaultValue={item}\n                  onChange={(num) => {\n                    const data = JSON.parse(JSON.stringify(formCaches));\n                    data.splice(index, 1, num);\n                    setFormCaches(data);\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    const data = JSON.parse(JSON.stringify(formCaches));\n                    data.splice(index, 0, 1);\n                    console.log(data);\n\n                    setFormCaches(data);\n                  }}\n                >\n                  +\n                </button>\n                <button>-</button>\n              </div>\n            );\n          })}\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nconst DefaultSettingWrapperStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"50%\",\n};\n\nconst DefaultSettingRowStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-evenly\",\n  marginBottom: \"10px\",\n};\n"]},"metadata":{},"sourceType":"module"}