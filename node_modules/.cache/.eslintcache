[{"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/index.tsx":"1","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/App.tsx":"2","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/games/index.tsx":"3","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/games/hook.tsx":"4","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/line/index.tsx":"5","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx":"6","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/lib/initData.tsx":"7","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/box/index.tsx":"8"},{"size":484,"mtime":1643079321344,"results":"9","hashOfConfig":"10"},{"size":181,"mtime":1643271769301,"results":"11","hashOfConfig":"10"},{"size":2180,"mtime":1643354157869,"results":"12","hashOfConfig":"10"},{"size":3021,"mtime":1643354070333,"results":"13","hashOfConfig":"10"},{"size":691,"mtime":1643174884835,"results":"14","hashOfConfig":"10"},{"size":2630,"mtime":1643355107343,"results":"15","hashOfConfig":"10"},{"size":1824,"mtime":1643276409282,"results":"16","hashOfConfig":"10"},{"size":1036,"mtime":1643353868403,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12va10o",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/index.tsx",[],["40","41"],"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/App.tsx",[],"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/games/index.tsx",["42","43"],"import { Button } from \"antd\";\nimport { CSSProperties, useMemo } from \"react\";\nimport { IBox } from \"../../type/types\";\nimport Line from \"../line\";\nimport Setting from \"../setting\";\nimport { useGameHook } from \"./hook\";\n\nexport default function Games() {\n  const {\n    handleClickChangeCurrentPlayer,\n    currentPlayer,\n    setCurrentPlayer,\n    gamesDatas,\n    handleClickBox,\n    gamesFinish,\n    handleClickReset,\n    handleClickSetting,\n    settingDatas,\n    setSettingDatas,\n  } = useGameHook();\n\n  return (\n    <div style={DefaultPageStyle}>\n      <div style={DefaultWrapper}>\n        <div style={DefaultWrapperInner}>\n          {gamesDatas.map((line: Array<IBox>, index: number) => {\n            return (\n              <Line\n                key={index}\n                line={line}\n                currentPlayer={currentPlayer}\n                handleClickBox={handleClickBox}\n              ></Line>\n            );\n          })}\n        </div>\n      </div>\n      <p style={DefaultTextWrapper}>\n        当前玩家: {currentPlayer === \"White\" ? \"白棋\" : \"黑棋\"}\n      </p>\n\n      <div style={DefaultBtnWrapper}>\n        <Button\n          type=\"primary\"\n          disabled={gamesFinish}\n          onClick={handleClickChangeCurrentPlayer}\n        >\n          确定\n        </Button>\n        <Button type=\"primary\" danger onClick={handleClickReset}>\n          重玩\n        </Button>\n\n        <Setting\n          setting={settingDatas}\n          setSettingDatas={setSettingDatas}\n          handleClickSetting={handleClickSetting}\n          gamesDatas={gamesDatas}\n        ></Setting>\n      </div>\n    </div>\n  );\n}\n\nconst DefaultWrapper: CSSProperties = {\n  textAlign: \"center\",\n};\n\nconst DefaultWrapperInner: CSSProperties = {\n  background: \"#a3721f\",\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst DefaultTextWrapper: CSSProperties = {\n  marginTop: \"20px\",\n};\n\nconst DefaultBtnWrapper: CSSProperties = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  marginTop: \"10px\",\n  width: \"300px\",\n};\n\nconst DefaultPageStyle: CSSProperties = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  height: \"100vh\",\n};\n","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/games/hook.tsx",["44","45","46","47","48"],"import { message, Modal } from \"antd\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { gameDatas, initGameDatas } from \"../../lib/initData\";\nimport { IBox, IPlayer } from \"../../type/types\";\n\nexport const useGameHook = () => {\n  const [currentPlayer, setCurrentPlayer] = useState(\"Block\");\n  const [settingDatas, setSettingDatas] = useState([3, 5, 7]);\n  const [initGames, setInitGames] = useState(initGameDatas(settingDatas));\n  const [gamesDatas, setGamesDatas] = useState(initGames);\n  const [currentAllowSetPieceLine, setCurrentAllowSetPieceLine] = useState(-1);\n  const [gamesFinish, setGamesFinish] = useState(false);\n  const [currentChoosePiece, setCurrentChoosePiece] = useState(\n    [] as Array<IBox>\n  );\n\n  const handleClickChangeCurrentPlayer = () => {\n    if (!currentChoosePiece.length) {\n      message.info(\"请走棋\");\n      return;\n    }\n    const player = currentPlayer === \"White\" ? \"Block\" : \"White\";\n    setCurrentPlayer(player);\n    setCurrentAllowSetPieceLine(-1);\n    setCurrentChoosePiece([]);\n  };\n\n  useEffect(() => {\n    let Datas: any = gamesDatas.flat(Infinity);\n    const gamesFinishFlag = Datas.reduce((arr: any, item: IBox) => {\n      return arr && item.disable;\n    }, true);\n    if (gamesFinishFlag) {\n      const player = currentPlayer === \"White\" ? \"黑棋\" : \"白棋\";\n      Modal.success({\n        title: \"游戏结束\",\n        content: `${player}获胜`,\n      });\n    }\n  }, [gamesDatas]);\n\n  useEffect(() => {\n    setInitGames(initGameDatas(settingDatas));\n  }, [settingDatas]);\n\n  useEffect(() => {\n    resetInitGamesDatas();\n  }, [initGames]);\n\n  const resetInitGamesDatas = () => {\n    setGamesDatas(initGames);\n    setCurrentPlayer(\"Block\");\n    setCurrentAllowSetPieceLine(-1);\n  };\n\n  const handleClickBox = (box: IBox) => {\n    if (noAllowSetPiece(box)) {\n      return;\n    }\n    setPiece(box);\n  };\n\n  const noAllowSetPiece = (box: IBox) => {\n    if (\n      (currentAllowSetPieceLine > -1 &&\n        box.line !== currentAllowSetPieceLine) ||\n      box.disable\n    ) {\n      return true;\n    }\n    setCurrentAllowSetPieceLine(box.line);\n    return false;\n  };\n\n  const setPiece = (box: IBox) => {\n    const { line, row } = box;\n    setCurrentChoosePiece([...currentChoosePiece, box]);\n    setGamesDatas((item) => {\n      const _item = JSON.parse(JSON.stringify(item));\n      _item[line][row].disable = true;\n      _item[line][row].currentPlayer = currentPlayer as IPlayer;\n      return _item;\n    });\n  };\n\n  const handleClickReset = () => {\n    Modal.confirm({\n      content: `确认重玩么？`,\n      okText: \"重玩\",\n      cancelText: \"取消\",\n      onOk: () => {\n        resetInitGamesDatas();\n      },\n      onCancel: () => {},\n    });\n  };\n\n  const handleClickSetting = () => {\n    resetInitGamesDatas();\n  };\n\n  return {\n    handleClickChangeCurrentPlayer,\n    currentPlayer,\n    setCurrentPlayer,\n    gamesDatas,\n    handleClickBox,\n    gamesFinish,\n    handleClickReset,\n    handleClickSetting,\n    settingDatas,\n    setSettingDatas,\n  };\n};\n","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/line/index.tsx",["49","50"],"import { CSSProperties, useMemo, useState } from \"react\";\nimport { IBox } from \"../../type/types\";\nimport Box from \"../box\";\n\ninterface IProps {\n  line: Array<IBox>;\n  currentPlayer: string;\n  handleClickBox: Function;\n}\n\nexport default function Line(props: IProps) {\n  const { line, currentPlayer, handleClickBox } = props;\n  return (\n    <div style={DefaultLineStyle}>\n      {line.map((box, index) => {\n        return (\n          <Box\n            box={box}\n            key={index}\n            currentPlayer={currentPlayer}\n            handleClickBox={handleClickBox}\n          ></Box>\n        );\n      })}\n    </div>\n  );\n}\n\nconst DefaultLineStyle: CSSProperties = {\n  display: \"flex\",\n};\n","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/setting/index.tsx",["51","52","53"],"import { Button, InputNumber, Modal } from \"antd\";\nimport { CSSProperties, useEffect, useRef, useState } from \"react\";\nimport { IBox } from \"../../type/types\";\n\ninterface ISetting {\n  setting: Array<number>;\n  setSettingDatas: Function;\n  handleClickSetting: Function;\n  gamesDatas: Array<Array<IBox>>;\n}\n\nexport default function Setting(props: ISetting) {\n  const { setting, setSettingDatas, handleClickSetting, gamesDatas } = props;\n  const [visible, setVisible] = useState(false);\n  const [formCaches, setFormCaches] = useState(setting);\n\n  const settingFnc = () => {\n    setVisible((visible) => !visible);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={settingFnc}>\n        设置\n      </Button>\n      <Modal\n        title=\"设置\"\n        visible={visible}\n        onOk={() => {\n          setSettingDatas(formCaches);\n          setVisible(false);\n          handleClickSetting();\n        }}\n        onCancel={() => {\n          setVisible(false);\n        }}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        <div style={DefaultSettingWrapperStyle}>\n          {formCaches.map((item, index) => {\n            return (\n              <div style={DefaultSettingRowStyle} key={Math.random()}>\n                <span>第{index + 1}行</span>\n                <InputNumber\n                  min={1}\n                  max={10}\n                  defaultValue={item}\n                  onChange={(num) => {\n                    const data = JSON.parse(JSON.stringify(formCaches));\n                    data.splice(index, 1, num);\n                    setFormCaches(data);\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    const data = JSON.parse(JSON.stringify(formCaches));\n                    data.splice(index + 1, 0, 1);\n                    setFormCaches(data);\n                  }}\n                >\n                  +\n                </Button>\n                <Button\n                  onClick={() => {\n                    const data = JSON.parse(JSON.stringify(formCaches));\n                    data.splice(index, 1);\n                    setFormCaches(data);\n                  }}\n                >\n                  -\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nconst DefaultSettingWrapperStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"50%\",\n};\n\nconst DefaultSettingRowStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-evenly\",\n  marginBottom: \"10px\",\n};\n","/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/lib/initData.tsx",[],"/Users/tangchenlong/Desktop/react-demo/react-admin-demos/src/components/box/index.tsx",["54","55","56"],"import React, { CSSProperties, useEffect, useMemo, useState } from \"react\";\nimport { IBox } from \"../../type/types\";\n\ninterface IProps {\n  box: IBox;\n  currentPlayer: string;\n  handleClickBox: Function;\n}\n\nexport default function Box(props: IProps) {\n  const { box, handleClickBox } = props;\n\n  const handleClick = () => {\n    handleClickBox && handleClickBox(box);\n  };\n\n  return (\n    <div style={DefaultBoxBtnStyle} onClick={handleClick}>\n      <div\n        style={{\n          ...DefaultInnerStyle,\n          background: box.currentPlayer\n            ? box.currentPlayer === \"Block\"\n              ? \"#000\"\n              : \"#fff\"\n            : \"\",\n        }}\n      ></div>\n    </div>\n  );\n}\n\nconst DefaultBoxBtnStyle: CSSProperties = {\n  background: \"#f5c066\",\n  height: \"100px\",\n  width: \"100px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  cursor: \"pointer\",\n  margin: \"10px\",\n};\n\nconst DefaultInnerStyle: CSSProperties = {\n  height: \"80px\",\n  width: \"80px\",\n  margin: \"10px\",\n  borderRadius: \"50%\",\n};\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":25,"nodeType":"63","messageId":"64","endLine":2,"endColumn":32},{"ruleId":"61","severity":1,"message":"65","line":12,"column":5,"nodeType":"63","messageId":"64","endLine":12,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":2,"column":21,"nodeType":"63","messageId":"64","endLine":2,"endColumn":28},{"ruleId":"61","severity":1,"message":"66","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":19},{"ruleId":"61","severity":1,"message":"67","line":12,"column":23,"nodeType":"63","messageId":"64","endLine":12,"endColumn":37},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":18,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":48,"column":6,"nodeType":"70","endLine":48,"endColumn":17,"suggestions":"73"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":25,"nodeType":"63","messageId":"64","endLine":1,"endColumn":32},{"ruleId":"61","severity":1,"message":"74","line":1,"column":34,"nodeType":"63","messageId":"64","endLine":1,"endColumn":42},{"ruleId":"61","severity":1,"message":"75","line":2,"column":25,"nodeType":"63","messageId":"64","endLine":2,"endColumn":34},{"ruleId":"61","severity":1,"message":"76","line":2,"column":36,"nodeType":"63","messageId":"64","endLine":2,"endColumn":42},{"ruleId":"61","severity":1,"message":"77","line":13,"column":57,"nodeType":"63","messageId":"64","endLine":13,"endColumn":67},{"ruleId":"61","severity":1,"message":"75","line":1,"column":32,"nodeType":"63","messageId":"64","endLine":1,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":1,"column":43,"nodeType":"63","messageId":"64","endLine":1,"endColumn":50},{"ruleId":"61","severity":1,"message":"74","line":1,"column":52,"nodeType":"63","messageId":"64","endLine":1,"endColumn":60},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'setCurrentPlayer' is assigned a value but never used.","'gameDatas' is defined but never used.","'setGamesFinish' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentPlayer'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has a missing dependency: 'resetInitGamesDatas'. Either include it or remove the dependency array.",["81"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'gamesDatas' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [currentPlayer, gamesDatas]",{"range":"86","text":"87"},"Update the dependencies array to be: [initGames, resetInitGamesDatas]",{"range":"88","text":"89"},[1407,1419],"[currentPlayer, gamesDatas]",[1565,1576],"[initGames, resetInitGamesDatas]"]